ИМЯ

prex - система отслеживания и управления "точек пробы" в процессе или ядре

СИНТАКСИС

prex [-o имя_файла_трассировки] [-l библиотеки] [-s размер_в_кб] cmd
	[cmd-аргументы]...
prex [-o имя_файла_трассировки] [-l библиотеки] [-s размер_в_кб] -p pid
prex -k [-s размер_в_кб]

ОПИСАНИЕ

prex загружает библиотеку libtnfprobe, а затем находит все пробы в целевом исполняемом файле или ядре и предоставляет интерфейс пользователю для манипуляции ими. Это позволяет probe измениться для трассировки, отладки или того и друго вместе. Трассировка создает трассировочный файл TNF (Trace Normal Form), который может быть конвертирован в ASCII с помощью tnfdump(1) и использован для анализа производительности. Отладка генерирует строку стандартной ошибки при падении во время выполнения.

prex работает только на динамических исполняемых файлах.

ВЫЗОВ PREX

Существует три способа запуска prex:
1.  Использование prex для старта целевых приложений cmd, которые построенны  без зависимости от libtnfprobe. prex устанавливает переменную окружения LD_PRELOAD для загрузки libtnfprobe в целевом процессе. Затем prex использует переменную окружения PATH для поиска целевого приложения.
2. Прикрепление prex к запущенному приложению. Тогда, запущенное приложение должно уже иметь связь с libtnfprobe. В качестве альтернативы, пользователь может вручную установить LD_PRELOAD для включения libtnfprobe.so.1 до вызова цели.
3. Использование prex в режиме ядра с ключом -k. В режиме ядра будут доступны дополнительные команды, но некоторые команды из других режимов станут недоступны.

Управление файлом поиска пути

Есть два различных способа общения с prex:
	Характеристика управляющего файла. Во время запуска prex ищет файлы с именем .prexrc в каталогах указаных ниже. prex не останавливается на первом найденом. Таким образом, пользователь может переопределить настроеные значения по умолчанию. Порядок поиска:
		$HOME/
		./
	Ввод команд в строке prex.
	
Язык команд одинаков для обоих методов и задается в USAGE. Команды, которые что-то возвращают, не будут иметь смысла в управляющем файле. Вывод будет идти на стандартный поток вывода.

При использовании prex на целевом процессе, цель будет в запущенном или приостановленом состоянии. Это можно выясняется наличием или отсутствием подсказки prex>. Если подсказки нет, то целевой процесс запущен. Печать Control-C остановит целевой процесс и вернет пользователю подсказку, но нет гарантии, что это возврат произойдет сразу.

ОПЦИИ
Команда поддерживает следующие ключи:
	-k 
		Режим ядра: prex используется для управления пробами в ядре Solaris. В режиме ядра будут доступны дополнительные команды, но некоторые команды из других режимов станут недоступны.
	-l libraries
		Упомянутые библиотеки связаны в целевом процессе, использующим LD_PRELOAD. Этот ключ не может быть использован для присоединения к запущенному процессу. Аргумент ключа -l должен быть строкой, разделенной пробелами и заключенной в двойные ковычки. Каждый маркер такой строки должен быть именем библиотеки. Т.е. LD_PRELOAD управляет тем, как должны быть определены библиотеки, и где они будут найдены.
	-o имя_трассировочного_файла
		В файл будет записан вывод трассировки. имя_трассировочного файла считается относительно текущей рабочей директории prex (т.е. каталог в котором был пользователь при запуске prex).
		
		Если prex присоединяется к уже запущенноу процессу, то новое имя_трассировочного_файла не будет использоваться. Если имя файла не указано, то по уолчанию используется /$TMPDIR/trace-pid, где pid - ИД целевой программы. Если TMPDIR не задан, то используется /tmp.
	-s размер_в_кб
		Максимальный размер выходного файла трассировки в кбайтах. По умолчанию, размер 4096 кбайт для нормального использования и 384 кбайт в режиме ядра. Минимальный размер составляет 128 кбайт. После полного заполнения файла новые события будут перезаписывать старые.

ПРИМЕНЕНИЕ
	В это разделе описывается использование утилиты prex.

	Грамматика
	Пробы определяются списком разделенных пробелами селекторов. Селекторы имеют вид:
		атрибут=значение

	Писать "атрибут=" не обязательно, по умолчанию будет "ключи=".

	Атрибут или значение (обычно называются спецификациями) могут быть только такими:

	IDENT
		Любая последовательность букв, цифр, _, \, ., %, не начинающаяся с цифры. IDENT предполагает точное совпадение.
		
	QUOTED_STR
		Обычно используется, чтобы сохранить зарезервированные слова (любые команды в командном языке). QUOTED_STR предполагает точное совпадение и заключение в одинарные кавычки. 
		
	REGEXP
		REGEXP должен быть заключен в прямые слеши (/ /), A / могут быть включены в REGEXP вместо использования его с обратным слешем \.
	
ФАЙЛЫ
	.prexrc
		файл инициализации локального prex
	~/.prexrc
		файл инициализации пользовательского prex
	/proc/nnnnn
		Файлы процесса
	
ОШИБКИ
	prex должен выдать уведомление, когда идентификатор процесса был автоматически удален из набора фильтров.
	
	Существует известная ошибка в prex, которая выводит это уведомление:
		Tracing shut down in target program due to an internal error - Please restart prex and target
	Когда prex работает с правами суперпользователя, а целевой процесс - нет, и трассировочный файл помещается в каталог, из которого не может быть удален и восстановлен (каталог со sticky bit, такой как /tmp). Целевой процесс не сможет открыть трассировочный файл по необходимости, что приводит к отключению трассировки.
	
	Для решения проблемы достаточно не запускать prex с правами суперпользователя, запустить целевой процесс с правами суперпользователя или указать трассировочный файл в каталоге отличном от /tmp.
	